<template>
<ui-view>
  <ui-view class="chart_wrap" style="{{{ 'min-height': (winHeight*0.8) + 'px'}}}">
    <ui-view>
      <ui-text block>环形进度条</ui-text>
      <ui-view class="circular1">
        <ui-circular
          radius="100"
          top="100"
          left="100"
          color="#1ec695"
          value="70"
          line-width="10"
          line-cap="butt"
          width="200"
        ></ui-circular>
        <ui-view class="count12">70%</ui-view>
      </ui-view>
    </ui-view>
    <ui-view>
      <ui-text block>倒计时</ui-text>
      <ui-view class="circular1">
        <ui-circular
          radius="100"
          top="100"
          left="100"
          width="200"
          color="#1ec695"
          value="{{ circularValue }}"
          line-width="10"
        ></ui-circular>
        <ui-view class="count12">{{ count12 }}%</ui-view>
      </ui-view>
    </ui-view>
    <ui-view>
      <ui-text block>自定义样式1：内环背景</ui-text>
      <ui-view class="circular1">
        <ui-circular
          radius="100"
          top="100"
          left="100"
          width="200"
          color="#53DF15"
          value="70"
          line-width="10"
          background-radius="93"
          background-line-width="2"
          background-color="#1E3576"
        ></ui-circular>
        <ui-view class="count12">70%</ui-view>
      </ui-view>
    </ui-view>
    <ui-view>
      <ui-text block>自定义样式2：外环背景</ui-text>
      <ui-view class="circular1">
        <ui-circular
          radius="100"
          top="100"
          left="100"
          width="200"
          color="#28868A"
          value="70"
          line-width="10"
          background-radius="100"
          background-line-width="2"
          background-color="#227477"
          line-cap="butt"
        ></ui-circular>
        <ui-view class="count12">70%</ui-view>
      </ui-view>
    </ui-view>
  </ui-view>
</ui-view>
</template>
<script>
export default {
  config: {

  },
  data () {
    return {
      winHeight: ui.WIN_HEIGHT,
      winWidth: ui.WIN_WIDTH,
      circularValue: 40,
      count12: 0,
      j:60
    }
  },
  methods: {

  },
  mounted () {
    setInterval(() => {
      this.circularValue = this.j / 0.6
      if (this.j <= 9) {
        if (this.j <= 0) {
          this.j = 0
        } else {
          this.j--
        }
      } else {
        this.j--
      }
      this.count12 = this.j
    }, 1000)
  }
}
</script>
<style lang="less">
  .chart_wrap{
    background-color: #01101F;
    padding:0 20px;
    .ui-view{
      text-align:center;
      padding-bottom:20px;
      .ui-text{
        padding:20px 0 30px 0;
        color:#fff;
        font-size:18px;
      }
    }
  }
  .circular1{
    display:inline-block;
    position: relative;
    .count12{
      color:#fff;
      font-size:16px;
      text-align:center;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%,-50%);
      line-height: 30px;
    }
  }
</style>
